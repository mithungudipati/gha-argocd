name: PR Flow

on: [pull_request]

# on:
#   # push:
#   #   branches:
#   #     - '**'
#   pull_request:
#     # branches: [master]


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: CHECKOUT
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            mithungudipati/example-argocd
          tags: |
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker images
        id: build
        uses: docker/build-push-action@v3.0.0
        with:
         push: true 
         tags: ${{ steps.meta.outputs.tags }}
      - name: Get Pull Request Number
        id: pr
        run: echo "::set-output name=pull_request_number::$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: microsoft/variable-substitution@v1 
        with:
          files: 'kustomize/overlays/dev/*.yaml'
        env:
          nameSuffix: ${{ steps.pr.outputs.pull_request_number }}
      - run: "cat /home/runner/work/kustomize-argocd/kustomize-argocd/kustomize/overlays/dev/kustomization.yaml"
      - uses: clowdhaus/argo-cd-action/@main
        with:
          version: 2.3.3
          command: app create pr${{ steps.pr.outputs.pull_request_number }}-kustomize-argocd-ex
          options: |
           --server ${{ secrets.ARGOCD_SERVER }}
           --insecure --upsert --sync-policy auto --sync-option CreateNamespace=true 
           --repo https://github.com/${{ github.repository }}.git 
           --revision ${{github.sha}} 
           --path kustomize/overlays/dev 
           --dest-namespace pr${{ steps.pr.outputs.pull_request_number }}-microservices 
           --dest-server https://kubernetes.default.svc 
           --kustomize-image alpine:3.10=${{ steps.meta.outputs.tags }}@${{ steps.build.outputs.digest }} 
           --auth-token ${{ secrets.ARGOCD_TOKEN }} 
           --project apps2deploy
    